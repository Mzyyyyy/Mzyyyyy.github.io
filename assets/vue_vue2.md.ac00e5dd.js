import{_ as n,c as s,o as a,a as t}from"./app.446d80f6.js";const f='{"title":"vue-loader \u662F\u600E\u4E48\u517C\u5BB9 webpack \u7684 HMR \u7684","description":"","frontmatter":{},"headers":[{"level":2,"title":"vue-loader \u5173\u95ED\u70ED\u91CD\u8F7D","slug":"vue-loader-\u5173\u95ED\u70ED\u91CD\u8F7D"},{"level":2,"title":"hot-reload api \u89E3\u6790","slug":"hot-reload-api-\u89E3\u6790"},{"level":2,"title":"hot-reload-api","slug":"hot-reload-api"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"},{"level":2,"title":"Q","slug":"q"}],"relativePath":"vue/index.md","lastUpdated":1643036710657}',p={},o=t(`<h1 id="vue-loader-\u662F\u600E\u4E48\u517C\u5BB9-webpack-\u7684-hmr-\u7684" tabindex="-1">vue-loader \u662F\u600E\u4E48\u517C\u5BB9 webpack \u7684 HMR \u7684 <a class="header-anchor" href="#vue-loader-\u662F\u600E\u4E48\u517C\u5BB9-webpack-\u7684-hmr-\u7684" aria-hidden="true">#</a></h1><h2 id="vue-loader-\u5173\u95ED\u70ED\u91CD\u8F7D" tabindex="-1">vue-loader \u5173\u95ED\u70ED\u91CD\u8F7D <a class="header-anchor" href="#vue-loader-\u5173\u95ED\u70ED\u91CD\u8F7D" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  module<span class="token operator">:</span> <span class="token punctuation">{</span>
    rules<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        loader<span class="token operator">:</span> <span class="token string">&quot;vue-loader&quot;</span><span class="token punctuation">,</span>
        options<span class="token operator">:</span> <span class="token punctuation">{</span>
          hotReload<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// \u5173\u95ED\u70ED\u91CD\u8F7D</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="hot-reload-api-\u89E3\u6790" tabindex="-1">hot-reload api \u89E3\u6790 <a class="header-anchor" href="#hot-reload-api-\u89E3\u6790" aria-hidden="true">#</a></h2><p>\u6211\u4EEC\u53EF\u4EE5\u4ECE vue-loader \u7684\u89E3\u6790\u51FD\u6570\u4E2D\u770B\u5230\uFF0C</p><div class="language-javascript"><pre><code><span class="token comment">// vue-loader/lib/index.js</span>
<span class="token keyword">const</span> needsHotReload <span class="token operator">=</span>
  <span class="token operator">!</span>isServer <span class="token operator">&amp;&amp;</span>
  <span class="token operator">!</span>isProduction <span class="token operator">&amp;&amp;</span>
  <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>script <span class="token operator">||</span> descriptor<span class="token punctuation">.</span>template<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
  options<span class="token punctuation">.</span>hotReload <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u91CC\u5224\u65AD\u4E86\u662F\u5426\u7F16\u8BD1\u7684\u76EE\u6807\u975E server\u3001\u975E\u751F\u4EA7\u8005\uFF0C\u4E14 vue \u7EC4\u4EF6\u4E2D script \u6216 template \u5B58\u5728\uFF0C\u6700\u540E\u4E00\u6B65\u67E5\u770B\u662F\u5426\u914D\u7F6E\u4E86 hotReload = true\uFF08\u9ED8\u8BA4\u5F00\u542F\uFF09</p><div class="language-javascript"><pre><code><span class="token comment">// vue-loader/lib/index.js 178\u884C</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>needsHotReload<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> <span class="token function">genHotReloadCode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> hasFunctional<span class="token punctuation">,</span> templateRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// vue-loader/lib/codegen/hotReload.js</span>
<span class="token keyword">const</span> hotReloadAPIPath <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;vue-hot-reload-api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">genTemplateHotReloadCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> request</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    module.hot.accept(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>request<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, function () {
      api.rerender(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, {
        render: render,
        staticRenderFns: staticRenderFns
      })
    })
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">genHotReloadCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> functional<span class="token punctuation">,</span> templateRequest</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    /* hot reload */
    if (module.hot) {
      var api = require(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hotReloadAPIPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)
      api.install(require(&#39;vue&#39;))
      if (api.compatible) {
        module.hot.accept()
        if (!api.isRecorded(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;)) {
          api.createRecord(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, component.options)
        } else {
          api.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>functional <span class="token operator">?</span> <span class="token string">&quot;rerender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;reload&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, component.options)
        }
        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>templateRequest <span class="token operator">?</span> <span class="token function">genTemplateHotReloadCode</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> templateRequest<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      }
    }
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u5F00\u542F\u7684 hotReload\uFF0C\u6B64\u65F6\u5C31\u4F1A\u5728 vue \u6587\u4EF6\u4E2D\u6CE8\u5165\u8FD9\u4E2A if \u5206\u652F\u3002\u5176\u5B9E\u5C31\u662F\u7528\u5230\u4E86 webpack \u7684 module.hot - API\u3002 \u5728./index.vue \u4F8B\u5B50\u4E2D\uFF0C\u4E09\u4E2A\u53C2\u6570\u5206\u522B\u662F id: string, functional: boolean, templateRequest: string \u6211\u4EEC\u7ECF\u5E38\u7528\u5230\u7684\u662F\uFF1Aid \u5C31\u4EE3\u8868\u8BE5 SFC \u6587\u4EF6\u7684 hash \u503C\uFF0CtemplateRequest \u5219\u662F\u4EE3\u8868\u8FD9\u4E2A\u7EC4\u4EF6\u7684 template \u5757\u3002</p><p>\u4ECE\u4EE3\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u8FD9\u4E2A\u5E38\u91CF\uFF1AhotReloadAPIPath\uFF0C\u4ED6\u5C31\u662F\u4E00\u4E2A\u7EDD\u5BF9\u5730\u5740\u6307\u5411 hotReloadAPI \u6A21\u5757\u3002 \u6211\u4EEC\u770B\u4E0B\u8FD9\u4E9B\u4E2A if\u3001else \u8BED\u53E5\u3002</p><p>\u5047\u8BBE api.compatible = true \u53EF\u4EE5\u770B\u5230 api \u8FD9\u4E2A\u5BF9\u8C61\u4F1A\u8BB0\u5F55\u672C\u6587\u4EF6\u7684 id\uFF0C\u5426\u5219\u5C31\u8C03\u7528 api \u7684 reload \u6216 rerender \u51FD\u6570\u3002 \u4F46\u59CB\u7EC8\u4F1A\u5728 module.hot.accept \u4E2D\u6CE8\u518C\u56DE\u8C03\u51FD\u6570\u3002\u8BE5\u533F\u540D\u51FD\u6570\u52A8\u6001\u751F\u6210\uFF0C\u56E0\u4E3A template-block \u4EE5\u53CA id \u6BCF\u6B21\u90FD\u662F\u4E0D\u540C\u7684\u5E76\u8C03\u7528 rerender \u51FD\u6570\u3002</p><h2 id="hot-reload-api" tabindex="-1">hot-reload-api <a class="header-anchor" href="#hot-reload-api" aria-hidden="true">#</a></h2><p>\u6211\u4EEC api.compatible \u8FD9\u4E2A\u5B9E\u9645\u4E0A\u662F\u5728 install \u7684\u65F6\u5019\u786E\u8BA4\u4E86\u4E0B vue \u7684\u7248\u672C\u3002\u5728\u786E\u5B9A\u662F\u5426\u53EF\u652F\u6301\u70ED\u66F4\u65B0\u3002\u63A5\u4E0B\u53BB\u770B</p><p>\u5728 createReocord \u8FC7\u7A0B\u4E2D</p><div class="language-javascript"><pre><code><span class="token comment">// vue-hot-reload-api</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">createRecord</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> Ctor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ctor <span class="token operator">=</span> options<span class="token punctuation">;</span>
    options <span class="token operator">=</span> Ctor<span class="token punctuation">.</span>options<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">makeOptionsHot</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  map<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    Ctor<span class="token operator">:</span> Ctor<span class="token punctuation">,</span>
    options<span class="token operator">:</span> options<span class="token punctuation">,</span>
    instances<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">makeOptionsHot</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>functional<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> render <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> instances <span class="token operator">=</span> map<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>instances<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx <span class="token operator">&amp;&amp;</span> instances<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        instances<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token function">render</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">injectHook</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> initHookName<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> record <span class="token operator">=</span> map<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>record<span class="token punctuation">.</span>Ctor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        record<span class="token punctuation">.</span>Ctor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      record<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">injectHook</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token string">&quot;beforeDestroy&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> instances <span class="token operator">=</span> map<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">.</span>instances<span class="token punctuation">;</span>
      instances<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>instances<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">injectHook</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> name<span class="token punctuation">,</span> hook</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> existing <span class="token operator">=</span> options<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
  options<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> existing
    <span class="token operator">?</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>existing<span class="token punctuation">)</span>
      <span class="token operator">?</span> existing<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>hook<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token punctuation">[</span>existing<span class="token punctuation">,</span> hook<span class="token punctuation">]</span>
    <span class="token operator">:</span> <span class="token punctuation">[</span>hook<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5176\u5B9E\u8FD9\u91CC\u4E3B\u8981\u7684\u903B\u8F91\u662F\u5229\u7528\u4E86 vue \u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F\uFF0CbeforeCreate \u548C beforeDestroy Hook\u3002\u5728\u5176\u4E2D\u6CE8\u518C\u4E86\u4E00\u4E2A callback \u51FD\u6570\uFF0C\u5728\u521B\u5EFA\u7684\u65F6\u5019\u52A0\u5165\u5230 map.instance \u4E2D\uFF0C\u9500\u6BC1\u7684\u65F6\u5019\u628A\u5B83\u79FB\u9664\u3002</p><div class="language-javascript"><pre><code>#reload
exports<span class="token punctuation">.</span>reload <span class="token operator">=</span> <span class="token function">tryWrap</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> record <span class="token operator">=</span> map<span class="token punctuation">[</span>id<span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      options <span class="token operator">=</span> options<span class="token punctuation">.</span>options
    <span class="token punctuation">}</span>
    <span class="token function">makeOptionsHot</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>record<span class="token punctuation">.</span>Ctor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>version<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// preserve pre 2.2 behavior for global mixin handling</span>
        record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>extendOptions <span class="token operator">=</span> options
      <span class="token punctuation">}</span>
      <span class="token keyword">var</span> newCtor <span class="token operator">=</span> record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>super<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
      <span class="token comment">// prevent record.options._Ctor from being overwritten accidentally</span>
      newCtor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_Ctor <span class="token operator">=</span> record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_Ctor
      record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>options
      record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>cid <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>cid
      record<span class="token punctuation">.</span><span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>prototype
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newCtor<span class="token punctuation">.</span>release<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// temporary global mixin strategy used in &lt; 2.0.0-alpha.6</span>
        newCtor<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">updateOptions</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  record<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">.</span>$vnode <span class="token operator">&amp;&amp;</span> instance<span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      instance<span class="token punctuation">.</span>$vnode<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Root or manually mounted instance modified. Full reload required.&#39;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD9\u6761\u8BED\u53E5 instance.$vnode.context.$forceUpdate()\u5C31\u80FD\u8BF4\u660E\u4E00\u5207\u4E86\uFF0C\u6240\u6709\u8FD9\u4E2A SFC \u6587\u4EF6\u7684 instance \u5168\u90E8\u5F3A\u5236\u66F4\u65B0\u3002\u503C\u5F97\u6CE8\u610F\u4E00\u63D0\u7684\u662F\uFF0C\u662F\u672C\u5B9E\u4F8B vnode \u4E0B context \u7F16\u8BD1\u4E0A\u4E0B\u6587\uFF0C\u8FD9\u4E2A\u662F\u7236\u7EC4\u4EF6\u522B\u5F04\u9519\u4E86\u3002</p><p>\u90A3\u6211\u4EEC\u4FEE\u6539\u4E00\u6B21 SFC \u6587\u4EF6\u8BD5\u8BD5\u770B</p><p>\u4EC5\u4FEE\u6539 script-block \u56E0\u4E3A sfc \u6587\u4EF6\u4FEE\u6539\u4E86\uFF0C\u6240\u4EE5 vue-loader \u91CD\u65B0\u7F16\u8BD1\u8BE5\u6587\u4EF6\u3002\u6B64\u65F6 id \u548C\u4E4B\u524D\u4E00\u6837\u5417\uFF0C\u662F\u4E00\u6837\u7684\u56E0\u4E3A\u5B83\u7684\u6587\u4EF6\u540D\u79F0\u4E4B\u7C7B\u7684\u4FE1\u606F\u90FD\u6CA1\u6539\u904D\u3002\u5185\u5BB9\u76F8\u540C\uFF0C\u901A\u8FC7 hash \u51FD\u6570\u8BA1\u7B97\uFF0C\u5C31\u76F8\u5F53\u4E8E\u662F\u6821\u9A8C\u4E86\u6587\u4EF6\u4FE1\u606F\u7684\u5B8C\u6574\u6027\u4E86 \u4E3A\u4EC0\u4E48\u8981\u91CD\u65B0\u6267\u884C makeOptionsHot \u51FD\u6570\uFF0C\u56E0\u4E3A\u6B64\u65F6\u7684 options \u662F\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u6211\u4EEC\u5F97\u91CD\u590D\u7684\u505A\u4E00\u904D\u64CD\u4F5C\u3002\u56E0\u4E3A\u9500\u6BC1\u8FD9\u4E2A\u7EC4\u4EF6\u7684\u65F6\u5019\uFF0C\u8FD8\u662F\u8981\u79FB\u9664\u76F8\u5173\u7684\u94A9\u5B50\u7684\u3002</p><p>\u968F\u540E\u5B9E\u9645\u4E0A\u5C31\u662F\u4FDD\u7559\u539F\u5148\u7684\u76F8\u5173\u5B9E\u4F8B\uFF0C\u4EA7\u751F\u65B0\u7684\u7EC4\u4EF6 cid \u7B49</p><div class="language-javascript"><pre><code><span class="token keyword">var</span> newCtor <span class="token operator">=</span> record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>super<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// prevent record.options._Ctor from being overwritten accidentally</span>
newCtor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_Ctor <span class="token operator">=</span> record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_Ctor<span class="token punctuation">;</span>
record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>options<span class="token punctuation">;</span>
record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>cid <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>cid<span class="token punctuation">;</span>
record<span class="token punctuation">.</span><span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> newCtor<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
</code></pre></div><p>\u4FEE\u6539 template-block</p><div class="language-javascript"><pre><code>exports<span class="token punctuation">.</span>rerender <span class="token operator">=</span> <span class="token function">tryWrap</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> record <span class="token operator">=</span> map<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    record<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      instance<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> options<span class="token punctuation">.</span>options<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>record<span class="token punctuation">.</span>Ctor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>render <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
    record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> options<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">;</span>
    record<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      instance<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>render <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
      instance<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> options<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">;</span>
      <span class="token comment">// reset static trees</span>
      <span class="token comment">// pre 2.5, all static trees are cached together on the instance</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">.</span>_staticTrees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        instance<span class="token punctuation">.</span>_staticTrees <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 2.5.0</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>cached<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        record<span class="token punctuation">.</span>Ctor<span class="token punctuation">.</span>options<span class="token punctuation">.</span>cached <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 2.5.3</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>cached<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        instance<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>cached <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// post 2.5.4: v-once trees are cached on instance._staticTrees.</span>
      <span class="token comment">// Pure static trees are cached on the staticRenderFns array</span>
      <span class="token comment">// (both already reset above)</span>

      <span class="token comment">// 2.6: temporarily mark rendered scoped slots as unstable so that</span>
      <span class="token comment">// child components can be forced to update</span>
      <span class="token keyword">var</span> restore <span class="token operator">=</span> <span class="token function">patchScopedSlots</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
      instance<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      instance<span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span>restore<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// functional or no instance created yet</span>
    record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>render <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
    record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>staticRenderFns <span class="token operator">=</span> options<span class="token punctuation">.</span>staticRenderFns<span class="token punctuation">;</span>

    <span class="token comment">// handle functional component re-render</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>functional<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// rerender with full options</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">updateOptions</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// template-only rerender.</span>
        <span class="token comment">// need to inject the style injection code for CSS modules</span>
        <span class="token comment">// to work properly.</span>
        <span class="token keyword">var</span> injectStyles <span class="token operator">=</span> record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_injectStyles<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>injectStyles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> render <span class="token operator">=</span> options<span class="token punctuation">.</span>render<span class="token punctuation">;</span>
          record<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">h<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">injectStyles</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token function">render</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>_Ctor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token comment">// 2.5.3</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>cached<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        record<span class="token punctuation">.</span>options<span class="token punctuation">.</span>cached <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      record<span class="token punctuation">.</span>instances<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        instance<span class="token punctuation">.</span><span class="token function">$forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53E6\u5916\u4E00\u4E2A SFC \u6587\u4EF6\uFF0C\u4F1A\u88AB\u5206\u6210 template-block\u3001script-block\u3002\u5982\u679C\u662F template-block \u6539\u52A8\u4E86\uFF0Cwebpack \u4F1A\u53EA\u8BF7\u6C42\u8BE5\u6A21\u5757\u3002</p><p>\u8FD9\u79CD\u60C5\u51B5\u4E0B\u5373\u7EC4\u4EF6\u7684 render \u51FD\u6570\u88AB\u4FEE\u6539\u4E86\uFF0C\u6240\u4EE5\u9700\u8981\u66FF\u6362\u7EC4\u4EF6\u4E2D\u7684 render \u51FD\u6570\u3002\u548C\u4E4B\u524D script-block \u533A\u522B\u4E0D\u540C\u7684\u662F\uFF0C\u56E0\u4E3A\u672C\u7EC4\u4EF6\u53EA\u662F\u66F4\u65B0\u4E86 render \u51FD\u6570\uFF0C\u6240\u4EE5\u53EA\u8981\u672C\u7EC4\u4EF6\u5F3A\u5236\u5237\u65B0\u5373\u53EF\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u53EF\u4EE5\u770B\u5230 vue \u6587\u4EF6\u4E2D\u6839\u636E\u914D\u7F6E\u81EA\u52A8\u6CE8\u5165\u4E86\u4E00\u4E9B hotreload-API\uFF0C\u8FD9\u4E2A API \u7684\u539F\u7406\u5C31\u662F\u5728\u8FD0\u884C\u65F6\u4E2D\u589E\u52A0\u4E00\u4E2A\u4E2D\u4ECB\u8005\u5BF9\u8C61\uFF0C\u91CC\u9762\u5B58\u653E\u4E86\u6587\u4EF6\u7684 id\uFF0C\u548C\u76F8\u5173 instance\uFF08\u8FD9\u4E2A\u5B9E\u4F8B\u662F\u901A\u8FC7 vue \u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F\u6CE8\u518C\u7684\uFF09\u3002\u7B49\u5230\u6587\u4EF6\u6539\u52A8\u65F6\uFF0C\u6839\u636E\u53D8\u52A8\u7684 block\uFF0C\u9009\u62E9\u4E0D\u540C\u7684\u7B56\u7565\u6E32\u67D3$forceUpdate\u3002</p><h2 id="q" tabindex="-1">Q <a class="header-anchor" href="#q" aria-hidden="true">#</a></h2><p>vue \u662F\u600E\u4E48\u505A\u5230\u53EA\u66F4\u65B0\u4E00\u4E2A\u6A21\u5757\u7684\uFF0C\u4F8B\u5982 template-block \u66F4\u65B0\u4E86\uFF0C\u53EA\u53BB\u83B7\u53D6 template \u7684\u6A21\u5757 \u8FD9\u4E2A\u672C\u8D28\u4E0A\u6211\u89C9\u5F97\u5C31\u662F webpack-hot-module \u505A\u7684\u4E8B\u4E86\uFF0C\u5C31\u8DDF\u67D0\u4E2A\u6A21\u5757\u66F4\u65B0\u4E00\u6837\uFF0C\u5B83\u4F1A\u5BF9\u6BD4\u8FD9\u4E2A\u6587\u4EF6\u662F\u5426\u6709\u6539\u52A8\uFF08\u901A\u8FC7 hash \u503C\uFF09\u3002</p>`,30),e=[o];function c(u,i,l,k,r,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{f as __pageData,h as default};
