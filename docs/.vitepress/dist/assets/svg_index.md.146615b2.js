import{_ as n,c as s,o as a,a as t}from"./app.446d80f6.js";const d='{"title":"\u5F00\u7BB1\u5373\u7528\u7684 svg \u683C\u5F0F\u5316\u811A\u672C","description":"","frontmatter":{},"relativePath":"svg/index.md","lastUpdated":1642946909250}',p={},o=t(`<h1 id="\u5F00\u7BB1\u5373\u7528\u7684-svg-\u683C\u5F0F\u5316\u811A\u672C" tabindex="-1">\u5F00\u7BB1\u5373\u7528\u7684 svg \u683C\u5F0F\u5316\u811A\u672C <a class="header-anchor" href="#\u5F00\u7BB1\u5373\u7528\u7684-svg-\u683C\u5F0F\u5316\u811A\u672C" aria-hidden="true">#</a></h1><p>\u9879\u76EE\u91CC\u7684\u529F\u80FD\u8D8A\u591A\uFF0C\u7528\u5230\u7684 svg \u5C31\u4F1A\u8D8A\u591A\uFF0C\u4EE5\u81F3\u4E8E\u5199\u4E00\u4E2A\u6807\u51C6\u5316 svg \u56FE\u6807\u5185\u5BB9\u7684\u811A\u672C\u53D8\u5F97\u5F88\u6709\u5FC5\u8981\u3002</p><p>\u6839\u636E svg \u590D\u7528\u7684\u65B9\u5F0F\uFF0C\u91C7\u7528 symbol \u548C use \u6765\u5F15\u7528 svg\u3002</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#icon-xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ol><li>\u8FD9\u6837\u5199\u7684\u524D\u63D0\u5C31\u662F\u9700\u8981\u6709 js \u811A\u672C\u63D0\u524D\u6CE8\u5165\uFF0C\u8FD9\u662F\u5728 node \u670D\u52A1\u4E2D\u6A21\u62DF\u7684\u83B7\u53D6\u811A\u672C\u6587\u4EF6\u7684\u63A5\u53E3\uFF0C\u76EE\u7684\u662F\u4E3A\u4E86\u751F\u6210\u8FD9\u4E48\u4E00\u4E2A js\uFF0C\u5728\u6267\u884C\u7684\u65F6\u5019\uFF0C\u5C06\u6240\u6709\u683C\u5F0F\u5316\u540E\u7684 svg \u56FE\u6807\u62FC\u63A5\u5E76\u6CE8\u5165\u5230 svg \u4E2D\u800C\u8FBE\u5230\u76F4\u63A5 use \u4F7F\u7528\u7684\u76EE\u7684\u3002</li></ol><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token function">downloadSvgJs</span><span class="token punctuation">(</span><span class="token parameter">iconIdList<span class="token punctuation">,</span>prefix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> js<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    let symbolSvgs = &#39;&lt;symbol&gt;template&lt;/symbol&gt;&#39;;
    let svgSprite = &quot;&lt;svg&gt;&quot; + symbolSvgs + &quot;&lt;/svg&gt;&quot;;
    let script = function () {
        let scripts = document.getElementsByTagName(&quot;script&quot;);
        return scripts[scripts.length - 1];
    }();
    let shouldInjectCss = script.getAttribute(&quot;data-injectcss&quot;);
    let before = function (el, target) {
        target.parentNode.insertBefore(el, target);
    }
    let prepend = function (el, target) {
        if (target.firstChild) {
            before(el, target.firstChild);
        } else {
            target.appendChild(el);
        }
    };
    // \u6700\u7EC8\u8FD4\u56DE\u4E00\u4E2Aappend\u65B9\u6CD5
    function appendSvg() {
        let div, svg;
        div = document.createElement(&quot;div&quot;);
        div.innerHTML = svgSprite;
        svgSprite = null;
        svg = div.getElementsByTagName(&quot;svg&quot;)[0];
        if (svg) {
            svg.setAttribute(&quot;aria-hidden&quot;, &quot;true&quot;);
            svg.style.position = &quot;absolute&quot;;
            svg.style.width = 0;
            svg.style.height = 0;
            svg.style.overflow = &quot;hidden&quot;;
            prepend(svg, document.body);
        }
    }
    if (shouldInjectCss &amp;&amp; !window.__iconfont__svg__cssinject__) {
        window.__iconfont__svg__cssinject__ = true;
        try {
            document.write(&quot;&lt;style&gt;.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}&lt;/style&gt;&quot;)
        } catch (e) {
            console &amp;&amp; console.log(e)
        }
    }
    export default appendSvg;</span><span class="token template-punctuation string">\`</span></span>
    <span class="token comment">// \u4EE5\u4E0B\u4E3A\u6A21\u62DF\u7684\u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u6240\u6709\u56FE\u6807\u7684\u64CD\u4F5C\uFF0C\u53EF\u81EA\u884C\u8DF3\u8FC7</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>iconIdList<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> sqlitedb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqliteDB</span><span class="token punctuation">(</span>dateBase<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT * FROM icon WHERE</span><span class="token template-punctuation string">\`</span></span>
        iconIdList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            index <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> sql <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> ICON_ID =</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> sql <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> OR ICON_ID =</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> sqlitedb<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> allSvg<span class="token operator">=</span><span class="token string">&#39;&#39;</span>
        res<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span> <span class="token operator">=</span> <span class="token function">svgFormat</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">svg</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[\\r\\n]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
            item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span><span class="token operator">=</span>item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> id=&quot;svg-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span><span class="token constant">ICON_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; </span><span class="token template-punctuation string">\`</span></span><span class="token operator">+</span>item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
            allSvg<span class="token operator">+=</span>item<span class="token punctuation">.</span><span class="token constant">ICON_CONTENT</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> result<span class="token operator">=</span>js<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;symbol&gt;template&lt;/symbol&gt;&#39;</span><span class="token punctuation">,</span>allSvg<span class="token punctuation">)</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>js<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;symbol&gt;template&lt;/symbol&gt;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li>svg \u683C\u5F0F\u5316\uFF1A\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0CsvgFormat \u65B9\u6CD5\u5BF9\u6BCF\u4E2A svg \u56FE\u6807\u8FDB\u884C\u4E86\u683C\u5F0F\u5316\uFF0C\u7528\u5230\u4E86\u4E00\u4E9B\u7B80\u5355\u7684\u8F85\u52A9\u51FD\u6570\uFF0C\u5177\u4F53\u64CD\u4F5C\u5982\u4E0B\uFF1A</li></ol><div class="language-js"><pre><code><span class="token comment">/**
 * @svgFormat \u683C\u5F0F\u5316svg\u5B57\u7B26\u4E32
 * @param {String} string svg\u5B57\u7B26\u4E32
 */</span>
<span class="token keyword">function</span> <span class="token function">svgFormat</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> viewBoxAttr <span class="token operator">=</span> <span class="token function">getAttr</span><span class="token punctuation">(</span><span class="token string">&quot;viewBox&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> styleAttr <span class="token operator">=</span> <span class="token function">getAttr</span><span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> styleTag <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;style&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5206\u5272\u51FA\u8BE5svg\u7684style\u6807\u7B7E</span>
    styleTag <span class="token operator">=</span> <span class="token function">getTag</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;style type=&quot;text/css&quot;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;&lt;/style&gt;&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5206\u5272\u51FA&lt;svg...&gt;&lt;/svg&gt;\u6807\u7B7E\u5185\u6240\u6709\u5185\u5BB9</span>
  <span class="token keyword">let</span> svgBeginStr <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;svg[^&lt;&gt;]+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u5339\u914D\u51FA&lt;svg ...&gt;</span>
  <span class="token keyword">let</span> begin <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>svgBeginStr<span class="token punctuation">)</span> <span class="token operator">+</span> svgBeginStr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  content <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> lastIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/svg&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u83B7\u53D6svg\u56FE\u50CF\u5185\u5BB9</span>
  <span class="token comment">//\u53BB\u6389style\u6807\u7B7E</span>
  <span class="token keyword">let</span> styleLeft <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;style&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> styleRight <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/style&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  content <span class="token operator">=</span>
    content<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;style&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
      <span class="token operator">?</span> content<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> styleLeft<span class="token punctuation">)</span> <span class="token operator">+</span>
        content<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>styleRight <span class="token operator">+</span> <span class="token string">&quot;&lt;/style&gt;&quot;</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      <span class="token operator">:</span> content<span class="token punctuation">;</span>
  <span class="token comment">//\u624B\u52A8\u63D2\u5165class\u6837\u5F0F</span>
  <span class="token keyword">let</span> classObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> classArr <span class="token operator">=</span> styleTag<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.st\\d{.+}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5339\u914D\u51FAstyle\u6807\u7B7E\u6240\u6709class</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>classArr <span class="token operator">&amp;&amp;</span> classArr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    classArr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> key <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> value <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      classObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> classObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u627E\u51FA\u5BF9\u5E94class \u5E76\u62FC\u63A5style \u5B57\u7B26\u4E32</span>
      content <span class="token operator">=</span> <span class="token function">getContent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> classObj<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9012\u5F52\u63D2\u5165\u6709\u76F8\u540Cclass\u7684\u6807\u7B7Estyle</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;svg class=&quot;icon&quot; style=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>styleAttr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &quot; viewBox=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>viewBoxAttr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/svg&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">/**
 * @getContent \u9012\u5F52\u63D2\u5165\u6709\u76F8\u540Cclass\u7684\u6807\u7B7Estyle
 * @param {String} key \u7C7B\u540D
 * @param {Object} classObj \u7C7B\u540D\u548Cstyle\u6620\u5C04\u5BF9\u8C61
 * @param {String} content \u8981\u5904\u7406\u7684\u5B57\u7B26\u4E32\u5185
 * @param {String} startIndex \u5F00\u59CB\u67E5\u627E\u7684index
 */</span>

<span class="token keyword">function</span> <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> classObj<span class="token punctuation">,</span> content<span class="token punctuation">,</span> startIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> classIndex <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> startIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>classIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u82E5\u540E\u9762\u8FD8\u6709\u540C\u4E00class\u5219\u7EE7\u7EED\u9012\u5F52\u63D2\u5165style</span>
    <span class="token keyword">let</span> insertIndex <span class="token operator">=</span> classIndex <span class="token operator">+</span> key<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span>
      content<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> insertIndex<span class="token punctuation">)</span> <span class="token operator">+</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> style=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>classObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
      content<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>insertIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getContent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> classObj<span class="token punctuation">,</span> res<span class="token punctuation">,</span> insertIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u6CA1\u6709 \u5219\u8FD4\u56DE\u5185\u5BB9</span>
    <span class="token keyword">return</span> conten<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">/**
 * @getTag \u83B7\u53D6svg\u6807\u7B7E\u53CA\u5185\u5BB9
 * @param {String} start \u5F00\u59CB\u6807\u7B7E
 * @param {String} end \u7ED3\u675F\u6807\u7B7E
 * @param {String} str svg\u5B57\u7B26\u4E32
 * @param {Boolean} getAll \u662F\u5426\u83B7\u53D6\u591A\u4E2A\u8BE5\u6807\u7B7E
 */</span>

<span class="token keyword">function</span> <span class="token function">getTag</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> str<span class="token punctuation">,</span> getAll <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> begin <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>getAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> lastIndex <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> temp<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> lastIndex<span class="token punctuation">)</span> <span class="token operator">+</span> end<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> temp<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> en<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">/**
 * @getAttr \u83B7\u53D6svg\u5355\u4E2A\u5C5E\u6027
 * @param {String} attr \u5C5E\u6027\u540D
 * @param {String} str svg\u5B57\u7B26\u4E32
 */</span>

<span class="token keyword">function</span> <span class="token function">getAttr</span><span class="token punctuation">(</span><span class="token parameter">attr<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> begin <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7ECF\u8FC7\u6700\u524D\u9762 downloadSvgJs \u65B9\u6CD5\u83B7\u53D6\u7684 js \u6587\u4EF6\uFF0C\u5728\u5DE5\u7A0B\u4E2D\u5F15\u5165\u6267\u884C\u8BE5\u811A\u672C\uFF0C\u5C31\u53EF\u4EE5\u5BF9\u6240\u6709\u683C\u5F0F\u5316\u540E\u7684 svg \u8FDB\u884C\u590D\u7528\uFF0C\u518D\u4E5F\u4E0D\u7528\u5728\u5DE5\u7A0B\u76EE\u5F55\u4E0B\u770B\u5230\u4E00\u5927\u5768\u7684 svg \u6587\u4EF6\u4E86\u3002\uFF08ps:\u5982\u679C svg \u65E0\u6CD5\u6B63\u5E38\u663E\u793A\uFF0C\u90A3\u5C31\u8981\u95EE\u95EE\u4F60\u4EEC\u7684 UI \u5C0F\u59D0\u59D0\u63D0\u4F9B\u7684 svg \u662F\u4E0D\u662F\u6709\u70B9\u4EC0\u4E48\u6BDB\u75C5\u4E86\uFF09</p>`,12),e=[o];function c(l,u,i,k,r,g){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{d as __pageData,f as default};
